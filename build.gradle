/*
 * Copyright 2021-2021 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.palantir.docker' version '0.31.0'
    id 'com.github.harbby.gradle.serviceloader' version '1.1.8'
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
    id 'application'
}

apply plugin: 'application'
apply plugin: 'com.palantir.docker'

group 'com.exactpro.th2'
version release_version

repositories {
    mavenCentral()
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }

    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }

    mavenLocal()
}

dependencies {
    api platform('com.exactpro.th2:bom:3.0.0')

    implementation 'com.exactpro.th2:common:3.31.4'
    implementation 'com.exactpro.th2:conn-dirty-tcp-core:0.0.1-th2-2785-1615274464-SNAPSHOT'

    implementation 'io.netty:netty-all:4.1.72.Final'

    implementation 'io.github.microutils:kotlin-logging:2.1.16'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0'

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

application {
    mainClassName 'com.exactpro.th2.conn.dirty.tcp.core.MainKt'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

serviceLoader {
    serviceInterface 'com.exactpro.th2.conn.dirty.tcp.core.api.IProtocolHandlerFactory'
}
